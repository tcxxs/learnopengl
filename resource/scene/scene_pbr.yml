camera: eye
cameras:
  eye:
    fov: 45.0
    pos: [0.5, 1.0, 1.0]
    target: [0.0, 0.0, -1.0]
lights:
  - type: point
    name: light
    pos: [-0.2, 0.3, 0.5]
  # - type: point_red
  #   name: light_red
  #   pos: [0.5, 0.0, 0.5]
  #   dir: [0.0, -1.0, 0.0]
  # - type: point_green
  #   name: light_green
  #   pos: [0.0, 0.0, 1.0]
  #   dir: [0.0, -1.0, 0.0]
  # - type: point_blue
  #   name: light_blue
  #   pos: [-0.5, 0.0, 1.5]
  #   dir: [0.0, -1.0, 0.0]
models:
  - type: sun
    pos: [[light, light, pos]]
    scale: 0.02
  # - type: cube
  #   pos: [[light, light_red, pos]]
  #   scale: 0.1
  #   material: bloom_red
  # - type: cube
  #   pos: [[light, light_green, pos]]
  #   scale: 0.1
  #   material: bloom_green
  # - type: cube
  #   pos: [[light, light_blue, pos]]
  #   scale: 0.1
  #   material: bloom_blue
  - type: cube
    pos: [0.0, 0.0, 0.0]
    scale: 50.0
    material: sky
  - type: ball
    pos: [0.0, 0.0, 0.0]
    scale: 0.1
  # - type: cube
  #   pos: [-0.2, 0.3, -0.1]
  #   scale: 0.1
  #   material: box_defer
  # - type: cube
  #   pos: [-0.2, 0.5, 1.2]
  #   scale: 0.4
  #   rotate: [0.0, 0.0, 30.0]
  #   material: box_defer
  # - type: cube
  #   pos: [0.3, -0.1, 1.0]
  #   scale: 0.2
  #   rotate: [45.0, 0.0, 45.0]
  #   material: box_defer
  # - type: wall
  #   pos: [0.0, -0.5, 0.0]
  #   scale: 5.0
  #   material: defer_geo
  # - type: wall
  #   pos: [1.0, 0.5, 0.0]
  #   rotate: [0.0, 0.0, 90.0]
  #   scale: 1.0
  #   material: defer_geo
  # - type: wall
  #   pos: [0.0, 0.5, -1.5]
  #   rotate: [90.0, 0.0, 0.0]
  #   scale: 1.0
  #   material: defer_geo
  # - type: nanosuit
  #   name: nanosuit
  #   pos: [0.0, 0.0, 0.0]
  #   scale: 0.05
  #   material: defer_geo
  #   materials:
  #     shadow: shadow_point
  # - type: aircraft
  #   pos: [-0.3, 0.0, -0.5]
  #   rotate: [30.0, -45.0, 0.0]
  #   scale: 0.1
  #   material: defer_geo
  #   materials:
  #     shadow: shadow_point
frames:
  shadow_spot:
    depth: depth
  shadow_point:
    square: true
    depth: depcube
  gbuffer:
    colors: [hdr: position, hdr: normal, ldr: albedo, ldr: pbr]
    depth: depst
  scene:
    colors: [hdr: scene, hdr: bloom]
    depth: depst
  ssao_ao:
    colors: [rf]
  ssao_blur:
    colors: [rf]
  bloom1:
    colors: [hdr]
  bloom2:
    colors: [hdr]
pass:
  - name: shadow
    states:
      clear: [color, depth, stencil]
      face: front
    shaders:
      shadow_point:
        light_pos: [[light, light, pos]]
        light_vp: [[light, light, vp]]
    output:
      frame: [[frame, shadow_point]]
  - name: defer_geo
    states:
      clear: [color, depth, stencil]
    shaders:
      pbr_geo:
    output:
      frame: [[frame, gbuffer]]
      colors:
        position: color_pos
        normal: color_normal
        albedo: color_albedo
        pbr: color_pbr
  - name: ssao_ao
    states:
      clear: [color]
      depth: [false]
    posts:
      ssao_ao:
        samples: [[ssao, samples, 64]]
        noise: [[ssao, noise, 4]]
        gbuffer.position: [[frame, gbuffer, position]]
        gbuffer.normal: [[frame, gbuffer, normal]]
    output:
      frame: [[frame, ssao_ao]]
  - name: ssao_blur
    states:
      clear: [color]
      depth: [false]
    posts:
      ssao_blur:
        noise: 4
        frame: [[frame, ssao_ao, color]]
    output:
      frame: [[frame, ssao_blur]]
  - name: defer_light
    states:
      clear: [color, depth]
      depth: [true]
    posts:
      pbr_light:
        shadow_probe: [[light, light, index]]
        shadow_cube: [[frame, shadow_point, depth]]
        gbuffer.position: [[frame, gbuffer, position]]
        gbuffer.normal: [[frame, gbuffer, normal]]
        gbuffer.albedo: [[frame, gbuffer, albedo]]
        gbuffer.pbr: [[frame, gbuffer, pbr]]
        ssao: [[frame, ssao_blur, color]]
    output:
      frame: [[frame, scene]]
      colors:
        scene: color_out
        bloom: color_bloom
  - name: scene_model
    states:
      depth: [true]
    shaders:
      color:
    output:
      frame: [[frame, scene]]
      colors:
        scene: color_out
        bloom: color_bloom
  - name: scene_sky
    states:
      depth: [true, lesseq]
      face: front
    shaders:
      sky:
    output:
      frame: [[frame, scene]]
      colors:
        scene: color_out
        bloom: color_bloom
  - name: bloom_first
    states:
      clear: [color]
      depth: [false]
    posts:
      bloom:
        horizontal: 1
        frame: [[frame, scene, bloom]]
    output:
      frame: [[frame, bloom1]]
  - name: bloom_ver
    states:
      clear: [color]
      depth: [false]
    posts:
      bloom:
        horizontal: 0
        frame: [[frame, bloom1, color]]
    output:
      frame: [[frame, bloom2]]
  - name: bloom_hor
    states:
      clear: [color]
      depth: [false]
    posts:
      bloom:
        horizontal: 1
        frame: [[frame, bloom2, color]]
    output:
      frame: [[frame, bloom1]]
  - {name: bloom_copy, copy: bloom_ver}
  - {name: bloom_copy, copy: bloom_hor}
  - {name: bloom_copy, copy: bloom_ver}
  - {name: bloom_copy, copy: bloom_hor}
  - {name: bloom_copy, copy: bloom_ver}
  - {name: bloom_copy, copy: bloom_hor}
  - {name: bloom_copy, copy: bloom_ver}
  - name: hdr
    states:
      clear: [color, depth, stencil]
      depth: [false]
    posts:
      hdr:
        scene: [[frame, scene, scene]]
        bloom: [[frame, bloom2, color]]